{"allowHeaderColumnsSorting":true,"allowHeaderRowsSorting":true,"allowSorting":true,"compactColumnHeaderIndentation":5,"compactRowHeaderIndentation":5,"defaultLevelSortBehavior":1,"defaultRowHeaderWidth":50,"gridOptions":{"caption":"","defaultColumnWidth":"50","tabIndex":1},"dataSource":{"columns":"","measures":"[Measures].[Sold_Dollars],[Measures].[bsFnXCalc1],[Measures].[bsFnXCalc2],[Measures].[bsFnXCalc3],[Measures].[bsFnXCalc4]","rows":"[Retailer_Name].[Retailer_Name],[Brand].[Brand]","metadata":{"cube":{"dimensions":[{"caption": "Brand", "name": "Brand", "hierarchies": [{"caption": "Brand", "name": "Brand", "levels": [{"name": "All Brand", "caption": "All Brand","memberProvider": "function (item) {return 'All Brand'; }"},{"name": "Brand", "caption": "Brand","memberProvider": "function (item) { return item.Brand; }"}]}]},{"caption": "Retailer Name", "name": "Retailer_Name", "hierarchies": [{"caption": "Retailer Name", "name": "Retailer_Name", "levels": [{"name": "All Retailer", "caption":"All Retailer","memberProvider": "function (item) { return 'All Retailer'; }"},{"name": "Retailer_Name", "caption": "Retailer","memberProvider": "function (item) { return item.Retailer_Name; }"}]}]}],"measuresDimension":{"measures":[{"aggregator":"function(items, cellMetadata) { var sum = 0; $.each(items, function(index, item) { sum += item.Sold_Dollars; } ); return sum; }","caption":"Sold Dollars  ($ - dollars)","name":"Sold_Dollars"},{"aggregator":"function(items, cellMetadata)  {      var measure = cellMetadata.measures().item(0).uniqueName();      var result;      var Sold_Dollars = 0;       $.each(items, function (index, item) {            Sold_Dollars += item.Sold_Dollars;      });       result = Sold_Dollars * 1;      return result; }","caption":"Calculated Column 1","name":"bsFnXCalc1"},{"aggregator":"function(items, cellMetadata)  {      var measure = cellMetadata.measures().item(0).uniqueName();      var result;      var Sold_Dollars = 0;       $.each(items, function (index, item) {            Sold_Dollars += item.Sold_Dollars;      });       result = Sold_Dollars * 2 ;      return result; }","caption":"Calculated Column 2","name":"bsFnXCalc2"},{"aggregator":"function(items, cellMetadata)  {      var measure = cellMetadata.measures().item(0).uniqueName();      var result;      var Sold_Dollars = 0;       $.each(items, function (index, item) {            Sold_Dollars += item.Sold_Dollars;      });       result = Sold_Dollars * 3;      return result; }","caption":"Calculated Column 3","name":"bsFnXCalc3"},{"aggregator":"function(items, cellMetadata)  {      var measure = cellMetadata.measures().item(0).uniqueName();      var result;      var Sold_Dollars = 0;       $.each(items, function (index, item) {            Sold_Dollars += item.Sold_Dollars;      });       result = Sold_Dollars * 4 ;      return result; }","caption":"Calculated Column 4","name":"bsFnXCalc4"},{"aggregator":"function(items, cellMetadata)  {      var measure = cellMetadata.measures().item(0).uniqueName();      var result;      var Sold_Dollars = 0;       $.each(items, function (index, item) {            Sold_Dollars += item.Sold_Dollars;      });       result = Sold_Dollars * 5 ;      return result; }","caption":"Calc5","name":"bsFnXCalc5"},{"aggregator":"function(items, cellMetadata)  {      var measure = cellMetadata.measures().item(0).uniqueName();      var result;      var Sold_Dollars = 0;       $.each(items, function (index, item) {            Sold_Dollars += item.Sold_Dollars;      });       result = Sold_Dollars * 6;      return result; }","caption":"Calc6","name":"bsFnXCalc6"},{"aggregator":"function(items, cellMetadata)  {      var measure = cellMetadata.measures().item(0).uniqueName();      var result;      var Sold_Dollars = 0;       $.each(items, function (index, item) {            Sold_Dollars += item.Sold_Dollars;      });       result = Sold_Dollars*7;      return result; }","caption":"Calc7","name":"bsFnXCalc7"}],"name":"Measures"},"caption":"a-DemoReport","name":"a-DemoReport"}}},"levelSortDirections":[{"levelUniqueName":"[Brand].[Brand].[Brand]","sortDirection":"ascending"},{"levelUniqueName":"[Retailer_Name].[Retailer_Name].[Retailer_Name]","sortDirection":"ascending"}],"rowHeaderLinkGroupIndentation":10,"treeRowHeaderIndentation":10,"rowsRendering":"","rendering":"function (event, object) {  for (var i = 0; i < object.owner.options.columns.length; i++) {  object.owner.options.columns[i].headerCssClass = \"center-align\";switch (object.owner.options.columns[i].headerText) {  case \"Sold Dollars  ($ - dollars)\":  object.owner.options.columns[i].formatter = function (val, rec) {    jQuery.ig.regional.defaults.currencyMaxDecimals = 0;   jQuery.ig.regional.defaults.currencyMinDecimals = 0;    return jQuery.ig.formatter(parseFloat(val), \"number\", \"#########0\");  };  break;  case \"Brand\":  object.owner.options.columns[i].formatter = function (val, rec) {    return val;  };  break;  case \"Retailer Name\":  object.owner.options.columns[i].formatter = function (val, rec) {    return val;  };  break;  case \"Calculated Column 1\":  object.owner.options.columns[i].formatter = function (val, rec) {    jQuery.ig.regional.defaults.currencyMaxDecimals = 2;   jQuery.ig.regional.defaults.currencyMinDecimals = 2;    return jQuery.ig.formatter(parseFloat(val), \"number\", \"###,###,##0.00\");  };  break;  case \"Calculated Column 2\":  object.owner.options.columns[i].formatter = function (val, rec) {    jQuery.ig.regional.defaults.currencyMaxDecimals = 2;   jQuery.ig.regional.defaults.currencyMinDecimals = 2;    return jQuery.ig.formatter(parseFloat(val), \"number\", \"###,###,##0.00\");  };  break;  case \"Calculated Column 3\":  object.owner.options.columns[i].formatter = function (val, rec) {    jQuery.ig.regional.defaults.currencyMaxDecimals = 2;   jQuery.ig.regional.defaults.currencyMinDecimals = 2;    return jQuery.ig.formatter(parseFloat(val), \"number\", \"###,###,##0.00\");  };  break;  case \"Calculated Column 4\":  object.owner.options.columns[i].formatter = function (val, rec) {    jQuery.ig.regional.defaults.currencyMaxDecimals = 2;   jQuery.ig.regional.defaults.currencyMinDecimals = 2;    return jQuery.ig.formatter(parseFloat(val), \"number\", \"###,###,##0.00\");  };  break;  case \"Calc5\":  object.owner.options.columns[i].formatter = function (val, rec) {    jQuery.ig.regional.defaults.currencyMaxDecimals = 2;   jQuery.ig.regional.defaults.currencyMinDecimals = 2;    return jQuery.ig.formatter(parseFloat(val), \"number\", \"###,###,##0.00\");  };  break;  case \"Calc6\":  object.owner.options.columns[i].formatter = function (val, rec) {    jQuery.ig.regional.defaults.currencyMaxDecimals = 2;   jQuery.ig.regional.defaults.currencyMinDecimals = 2;    return jQuery.ig.formatter(parseFloat(val), \"number\", \"###,###,##0.00\");  };  break;  case \"Calc7\":  object.owner.options.columns[i].formatter = function (val, rec) {    jQuery.ig.regional.defaults.currencyMaxDecimals = 2;   jQuery.ig.regional.defaults.currencyMinDecimals = 2;    return jQuery.ig.formatter(parseFloat(val), \"number\", \"###,###,##0.00\");  };  break;  }  };  }  ","dateFormatColumns":"","dateFormats":"","showRowTotalOnTop":"false"}